import { MongoClient, ServerApiVersion } from 'mongodb';

let isConnected = false;
let client: MongoClient | null = null;

export async function connectToDatabase() {
  if (isConnected && client) {
    return client;
  }

  const MONGODB_URI = process.env.MONGODB_URI;
  
  if (!MONGODB_URI) {
    throw new Error('Please define the MONGODB_URI environment variable inside .env.local');
  }

  try {
    // Create a MongoClient with a MongoClientOptions object to set the Stable API version
    client = new MongoClient(MONGODB_URI, {
      serverApi: {
        version: ServerApiVersion.v1,
        strict: true,
        deprecationErrors: true,
      }
    });

    // Connect the client to the server
    await client.connect();
    
    // Send a ping to confirm a successful connection
    await client.db("admin").command({ ping: 1 });
    console.log("Pinged your deployment. You successfully connected to MongoDB Atlas!");
    
    isConnected = true;
    return client;
  } catch (error) {
    console.error('MongoDB connection error:', error);
    throw error;
  }
}

export async function getDatabase() {
  const client = await connectToDatabase();
  return client.db('darkwater-pos');
}

export async function closeConnection() {
  if (client) {
    await client.close();
    isConnected = false;
    client = null;
  }
} 